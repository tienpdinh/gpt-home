apiVersion: apps/v1
kind: Deployment
metadata:
  name: gpt-home
  labels:
    app: gpt-home
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gpt-home
  template:
    metadata:
      labels:
        app: gpt-home
    spec:
      containers:
      - name: gpt-home
        image: gpt-home:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: SERVER_MODE
          value: "release"
        - name: LOG_LEVEL
          value: "info"
        - name: HA_URL
          valueFrom:
            configMapKeyRef:
              name: gpt-home-config
              key: ha-url
        - name: HA_TOKEN
          valueFrom:
            secretKeyRef:
              name: gpt-home-secrets
              key: ha-token
        - name: OLLAMA_URL
          valueFrom:
            configMapKeyRef:
              name: gpt-home-config
              key: ollama-url
        - name: OLLAMA_MODEL
          valueFrom:
            configMapKeyRef:
              name: gpt-home-config
              key: ollama-model
        - name: STORAGE_TYPE
          value: "memory"
        - name: STORAGE_IN_MEMORY
          value: "true"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: data-storage
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: data-storage
        persistentVolumeClaim:
          claimName: gpt-home-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: gpt-home-service
  labels:
    app: gpt-home
spec:
  selector:
    app: gpt-home
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gpt-home-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
  - host: gpt-home.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gpt-home-service
            port:
              number: 80